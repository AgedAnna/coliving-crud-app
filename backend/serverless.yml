service: coliving-backend

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_REGION, 'us-east-1'}
  environment:
    DYNAMODB_TABLE_PESSOAS: ${env:DYNAMODB_TABLE_PESSOAS, 'peoples'}
    YOLO_API_URL: ${env:YOLO_API_URL, 'https://3ji5haxzr9.execute-api.us-east-1.amazonaws.com/dev/caseYolo'}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PESSOAS}"
        - Effect: "Allow"
          Action:
            - "dynamodb:Query"
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PESSOAS}/index/EmailIndex"

functions:
  app:
    handler: src/index.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

  importarPessoas:
    handler: src/importHandler.handler
    events:
      - schedule:
          rate: rate(24 hours)
          enabled: true

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

resources:
  Resources:
    PessoasDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE_PESSOAS}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
